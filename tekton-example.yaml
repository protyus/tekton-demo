apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: init
spec:
  steps:
    - name: init
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "This is where we init"

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: scm-checkout
spec:
  steps:
    - name: scm-checkout
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Checking out some nice SCM..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: start-data-processing
spec:
  steps:
    - name: start-data-processing
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Start Subsetting..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: start-staging-init-oracle-builder
spec:
  steps:
    - name: start-staging-init-oracle-builder
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "===> Waiting for Docker container to start <==="
        sleep 15

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: export-database
spec:
  steps:
    - name: export-database
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "export"

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: upload-data-to-cloud-storage
spec:
  steps:
    - name: initialize-jnlp-agent-workspace
      image: alpine:3.12
      script: |
        #!/bin/sh -e
        echo "Initialize workspace"

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: reset-schema
spec:
  steps:
    - name: reset-schema
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Resetting schema..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-subsetter
spec:
  steps:
    - name: run-subsetter
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Running subsetter..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-table-count-tonicp
spec:
  steps:
    - name: get-table-count-tonicp
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Getting table count for tonicp..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: prepare-tonic-workspace
spec:
  steps:
    - name: prepare-tonic-workspace
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Preparing tonic workspace..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: run-foreign-key-mask-generator
spec:
  steps:
    - name: run-foreign-key-mask-generator
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Running foreign key mask generator..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: generate-data
spec:
  steps:
    - name: generate-data
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Generating data..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: get-table-count-tonics
spec:
  steps:
    - name: get-table-count-tonics
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Getting table count for tonics..."

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: export-db-schema
spec:
  params:
    - name: DB_NAME
      description: "Name of the database to export"
      type: string
  steps:
    - name: export-db-schema
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Exporting schema for database: $DB_NAME"

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: export-data
spec:
  params:
    - name: DB_NAME
      description: "Name of the database to export"
      type: string
  steps:
    - name: export-data
      image: alpine:3.12
      script: |
        #!/bin/sh
        echo "Exporting data for database: $DB_NAME"

---

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: my-pipeline
spec:
  tasks:
    - name: init
      taskRef:
        name: init
    - name: scm-checkout
      taskRef:
        name: scm-checkout
    - name: start-data-processing
      taskRef:
        name: start-data-processing
    - name: start-staging-init-oracle-builder
      taskRef:
        name: start-staging-init-oracle-builder
    - name: export-database
      taskRef:
        name: export-database
    - name: upload-data-to-cloud-storage
      taskRef:
        name: upload-data-to-cloud-storage

---

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: export-data
spec:
  tasks:
    - name: export-db-schema-db1
      taskRef:
        name: export-db-schema
      params:
        - name: DB_NAME
          value: "db1"
    - name: export-db-schema-db2
      taskRef:
        name: export-db-schema
      params:
        - name: DB_NAME
          value: "db2"
    - name: export-db-schema-db3
      taskRef:
        name: export-db-schema
      params:
        - name: DB_NAME
          value: "db3"
    - name: export-db-schema-db4
      taskRef:
        name: export-db-schema
      params:
        - name: DB_NAME
          value: "db4"
    - name: export-db-schema-db5
      taskRef:
        name: export-db-schema
      params:
        - name: DB_NAME
          value: "db5"

---

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: oracle-pipeline
spec:
  tasks:
    - name: init
      taskRef:
        name: init
    - name: scm-checkout
      taskRef:
        name: scm-checkout
    - name: reset-schema
      taskRef:
        name: reset-schema
    - name: run-subsetter
      taskRef:
        name: run-subsetter
    - name: get-table-count-tonicp
      taskRef:
        name: get-table-count-tonicp
    - name: prepare-tonic-workspace
      taskRef:
        name: prepare-tonic-workspace
    - name: run-foreign-key-mask-generator
      taskRef:
        name: run-foreign-key-mask-generator
    - name: generate-data
      taskRef:
        name: generate-data
    - name: get-table-count-tonics
      taskRef:
        name: get-table-count-tonics
    - name: export-data
      taskRef:
        name: export-data
    - name: upload-data-to-cloud-storage
      taskRef:
        name: upload-data-to-cloud-storage
